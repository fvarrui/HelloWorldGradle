buildscript {
	repositories {
        mavenCentral()
	}
	dependencies {
		classpath 'io.github.fvarrui:javapackager:1.6.0-SNAPSHOT'
	}
}

plugins {
    id 'java'
    id 'maven-publish'
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'

dependencies {
    implementation 'commons-io:commons-io:2.6'
}

import io.github.fvarrui.javapackager.gradle.PackageTask;
import io.github.fvarrui.javapackager.model.*;

group = 'io.github.fvarrui'
version = '1.0.0'
description = 'HelloWorld for Gradle'
sourceCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'

javapackager {
	mainClass = 'io.github.fvarrui.helloworld.Main'
	additionalResources = [ file('src/main/resources/info.txt') ]
	bundleJre = true
	generateInstaller = true
}

task packageForWindows(type: PackageTask, dependsOn: build) {
	description = 'Packages the application as a native Windows executable and bundles it in a zipball'
	platform = 'windows'
	createZipball = false
	additionalModulePaths = [ file('src') ]
	winConfig {
		registry = new Registry([
			entries: [
					new RegistryEntry([
						key: "HKCU:MyGradleApp",		
						valueName: "greeting",		
						valueType: ValueType.REG_SZ,		
						valueData: "hello"
					])
				]
			])
	}
}

task packageForLinux(type: PackageTask, dependsOn: build) {
	description = 'Packages the application as a native GNU/Linux executable and bundles it in a tarball'
	platform = 'linux'
	bundleJre = true
	createTarball = false
	generateInstaller = true
}

task packageForMac(type: PackageTask, dependsOn: build) {
	description = 'Packages the application as a native Mac OS app and bundles it in a tarball'
	platform = 'mac'
	createTarball = true
	scritps.bootstrap = file('assets/mac/bootstrap.sh');
}

task packageForAllPlatforms(dependsOn: [ packageForWindows, packageForMac, packageForLinux ]) {
	description = 'Packages the application for all platforms'
	group = 'JavaPackager'
}

